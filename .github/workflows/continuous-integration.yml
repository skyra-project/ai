name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Building:
    name: Compile source code Node v${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [12, 14, 15, 16, 17]
        os: [ubuntu-18.04, ubuntu-20.04, macos-latest]
        include:
          - node: 18
            os: ubuntu-20.04
          - node: 18
            os: macos-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          submodules: recursive
      - name: Add problem matcher
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          registry-url: https://registry.npmjs.org/
      - name: Install Dependencies
        run: yarn --immutable
      - name: Build Code
        run: yarn build

  Testing:
    name: Unit Tests Node v${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [12, 14, 15, 16, 17]
        os: [ubuntu-18.04, ubuntu-20.04, macos-latest]
        include:
          - node: 18
            os: ubuntu-20.04
          - node: 18
            os: macos-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          submodules: recursive
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          registry-url: https://registry.npmjs.org/
      - name: Install Dependencies
        run: yarn --immutable
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@884cf5c591490f86b788d68b6f585f26235578d6 # renovate: tag=v1.12
        with:
          cmake-version: '3.16.x'
      - name: Build C++ tests
        run: mkdir build-tests && cd build-tests && cmake .. && cmake --build . && cd ..
      - name: Run NodeJS tests
        run: yarn test --coverage
      - name: Run C++ Tests
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./build-tests/Debug/skyra_ai_tests.exe
          else
            ./build-tests/skyra_ai_tests
          fi
      - name: Store code coverage report
        if: ${{ matrix.node == '16' && matrix.os == 'ubuntu-20.04' }}
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # tag=v3
        with:
          name: node-${{ matrix.node }}-${{ matrix.os }}
          path: coverage/

  Upload_Coverage_Report:
    name: Upload coverage report to codecov
    needs: [Testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          fetch-depth: 2
      - name: Download Coverage report
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: node-16-ubuntu-20.04
          path: coverage/
      - name: Codecov Upload
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378 # tag=v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage/
          fail_ci_if_error: true