name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Building:
    name: Compile source code
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          submodules: recursive
      - name: Add problem matcher
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v16
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        with:
          node-version: 16
          cache: yarn
      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Build Code
        run: yarn build

  Testing:
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          submodules: recursive
      - name: Use Node.js 16
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        with:
          node-version: 16
          cache: yarn
      - name: Install Dependencies
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@884cf5c591490f86b788d68b6f585f26235578d6 # renovate: tag=v1.12
        with:
          cmake-version: '3.16.x'
      - name: Build C++ tests
        run: mkdir build-tests && cd build-tests && cmake .. && cmake --build . && cd ..
      - name: Run tests
        run: yarn test
      - name: Run C++ Tests
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./build-tests/Debug/skyra_ai_tests.exe
          else
            ./build-tests/skyra_ai_tests
          fi
